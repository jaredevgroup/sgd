@using SGD.BE
@helper RenderMenuJerarquicoDesdeListaMenuGeneral(List<MenuSistemaBE> listaGeneral, int? menuIdPadre = null)
{
    List<MenuSistemaBE> listaJerarquica = listaGeneral == null ? null : listaGeneral.Count(x => x.MenuIdPadre == menuIdPadre) == 0 ? null : listaGeneral.Where(x => x.MenuIdPadre == menuIdPadre).ToList();
    if (listaJerarquica != null)
    {
        foreach (MenuSistemaBE item in listaJerarquica)
        {
            bool tieneListaSubMenu = listaGeneral.Count(x => x.MenuIdPadre == item.MenuId) > 0;

            <li class="nav-item">
                <a href="@Url.Content(item.Url)" class="nav-link">
                    <i class="nav-icon @item.Icono"></i>
                    <p>
                        @item.Nombre
                        @if (tieneListaSubMenu)
                        {
                            <i class="right fas fa-angle-left"></i>
                        }
                    </p>
                </a>
                @if (tieneListaSubMenu)
                {
                    <ul class="nav nav-treeview">
                        @RenderMenuJerarquicoDesdeListaMenuGeneral(listaGeneral, item.MenuId)
                    </ul>
                }
            </li>
        }
    }
}

@{
    List<MenuSistemaBE> listaMenuSistema = (List<MenuSistemaBE>)Model;
    if (listaMenuSistema != null)
    {
        <nav class="mt-2">
            <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
                @RenderMenuJerarquicoDesdeListaMenuGeneral(listaMenuSistema)
            </ul>
        </nav>
    }
}